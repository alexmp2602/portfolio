<section
  id="inicio"
  class="page-bg relative isolate min-h-[90vh] flex items-center justify-center px-6 md:px-12 py-16 pt-28 fade-in-up fade-delay-100"
  role="region"
  aria-labelledby="hero-heading"
>
  <!-- Fondo decorativo -->
  <div
    aria-hidden="true"
    class="absolute inset-0 overflow-hidden pointer-events-none"
  >
    <div
      class="absolute w-[60vw] h-[60vw] bg-primary/5 dark:bg-accent/10 rounded-full blur-[120px] -top-32 -left-32"
    >
    </div>
  </div>

  <div
    class="glass-box w-full max-w-6xl mx-auto p-8 md:p-14 shadow-lg rounded-2xl backdrop-blur-md"
  >
    <h1
      id="hero-heading"
      class="text-4xl sm:text-5xl md:text-6xl font-extrabold leading-tight tracking-tight mb-6 text-surface"
    >
      Hola, soy <span class="text-primary dark:text-accent">Alex Pereyra</span>
    </h1>

    <p class="text-surface text-lg md:text-xl max-w-4xl mb-8 leading-relaxed">
      Frontend & <strong>Full-Stack</strong> Developer. Diseño interfaces rápidas
      con
      <strong>React/Next.js</strong> y construyo backends en <strong
        >Node.js</strong
      > con
      <strong>SQL</strong>, desplegando en <strong>Vercel/AWS</strong>. Enfoque
      en rendimiento, accesibilidad y animaciones con propósito (Astro ·
      Tailwind · GSAP).
    </p>

    <!-- Botón con menú de idiomas (menubutton accesible) -->
    <div class="relative inline-block">
      <button
        id="cv-menu-button"
        type="button"
        class="btn-primary inline-flex items-center gap-2 px-6 py-3 rounded-xl focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2"
        aria-haspopup="menu"
        aria-expanded="false"
        aria-controls="cv-menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-5 h-5"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5 5m0 0l5-5m-5 5V4"
          ></path>
        </svg>
        Ver CV
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-4 h-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          aria-hidden="true"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M19 9l-7 7-7-7"></path>
        </svg>
      </button>

      <nav
        id="cv-menu"
        class="hidden absolute mt-2 right-0 w-56 bg-white/90 dark:bg-gray-900/90 backdrop-blur-xl border border-white/20 dark:border-gray-700/40 rounded-lg shadow-lg ring-1 ring-black/10 dark:ring-white/10 overflow-hidden animate-fade-in"
        role="menu"
        aria-label="Opciones de CV"
        tabindex="-1"
      >
        <a
          href="/assets/cv/ES-Alex-Pereyra-Frontend-Fullstack.pdf"
          target="_blank" rel="noopener"
          role="menuitem"
          class="block px-4 py-3 text-sm text-gray-800 dark:text-gray-200 hover:bg-primary/10 focus:bg-primary/10 focus:outline-none"
          tabindex="-1"
        >
          📄 CV en Español
        </a>
        <a
          href="/assets/cv/EN-Alex-Pereyra-Frontend-Fullstack.pdf"
          target="_blank" rel="noopener"
          role="menuitem"
          class="block px-4 py-3 text-sm text-gray-800 dark:text-gray-200 hover:bg-primary/10 focus:bg-primary/10 focus:outline-none"
          tabindex="-1"
        >
          📄 Resume in English
        </a>
      </nav>
    </div>
  </div>
</section>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(-5px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fade-in {
    animation: fade-in 0.15s ease-out;
  }
  @media (prefers-reduced-motion: reduce) {
    .animate-fade-in {
      animation: none;
    }
  }
</style>

<script is:inline>
  (function () {
    const btn = document.getElementById("cv-menu-button");
    const menu = document.getElementById("cv-menu");
    if (!btn || !menu) return;

    let open = false;
    const items = Array.from(menu.querySelectorAll('[role="menuitem"]'));

    function show() {
      open = true;
      menu.classList.remove("hidden");
      btn.setAttribute("aria-expanded", "true");
      menu.removeAttribute("hidden");
      menu.focus();
      // Foco al primer item
      items[0]?.focus();
      // Cerrar al hacer click fuera
      document.addEventListener("pointerdown", onDocPointerDown, {
        capture: true,
      });
      document.addEventListener("keydown", onDocKeyDown);
    }

    function hide() {
      open = false;
      menu.classList.add("hidden");
      btn.setAttribute("aria-expanded", "false");
      menu.setAttribute("hidden", "true");
      btn.focus();
      document.removeEventListener("pointerdown", onDocPointerDown, {
        capture: true,
      });
      document.removeEventListener("keydown", onDocKeyDown);
    }

    function toggle() {
      open ? hide() : show();
    }

    function onDocPointerDown(e) {
      if (!menu.contains(e.target) && !btn.contains(e.target)) hide();
    }

    function onDocKeyDown(e) {
      if (!open) return;
      const currentIndex = items.indexOf(document.activeElement);
      switch (e.key) {
        case "Escape":
          e.preventDefault();
          hide();
          break;
        case "ArrowDown":
          e.preventDefault();
          items[(currentIndex + 1 + items.length) % items.length]?.focus();
          break;
        case "ArrowUp":
          e.preventDefault();
          items[(currentIndex - 1 + items.length) % items.length]?.focus();
          break;
        case "Home":
          e.preventDefault();
          items[0]?.focus();
          break;
        case "End":
          e.preventDefault();
          items[items.length - 1]?.focus();
          break;
      }
    }

    // Click en botón
    btn.addEventListener("click", toggle);

    // Enter/Espacio abren/cerran cuando el foco está en el botón (ya lo maneja click, pero por accesibilidad):
    btn.addEventListener("keydown", (e) => {
      if (e.key === "ArrowDown" && !open) {
        e.preventDefault();
        show();
      }
    });

    // Al tabular fuera del menú, cerramos
    menu.addEventListener("focusout", (e) => {
      // si el foco se va fuera del contenedor por completo
      if (open && !menu.contains(e.relatedTarget) && e.relatedTarget !== btn) {
        hide();
      }
    });
  })();
</script>
