---
interface Crumb {
  href: string;
  label: string;
}

interface Props {
  path?: Crumb[];
  current?: string;
  fallbackLabel?: string;
  fallbackHref?: string;
}

const {
  path = [],
  current = "",
  fallbackLabel = "‚Üê Volver",
  fallbackHref = "/",
} = Astro.props as Props;
---

<nav
  class="fixed top-0 left-0 w-full z-50 backdrop-blur bg-white/70 dark:bg-dark/70 border-b border-gray-200 dark:border-gray-800 transition-shadow"
>
  <div
    class="max-w-screen-xl mx-auto px-6 md:px-12 py-4 flex items-center gap-2 text-sm text-dark/70 dark:text-light/50"
  >
    {
      path.length > 0 ? (
        <>
          {path.map((crumb) => (
            <>
              <a
                href={crumb.href}
                class="hover:text-primary font-medium transition text-dark dark:text-light"
              >
                {crumb.label}
              </a>
              <span class="mx-1 select-none">/</span>
            </>
          ))}
          <span class="text-dark/40 dark:text-light/30 truncate max-w-[50%]">
            {current}
          </span>
        </>
      ) : (
        <a
          href={fallbackHref}
          class="text-dark dark:text-light font-medium hover:text-primary transition"
        >
          {fallbackLabel}
        </a>
      )
    }
  </div>
</nav>
